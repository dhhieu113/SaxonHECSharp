name: Alpine CI - SaxonHECSharp

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest   # host runner is still Ubuntu
    container:
      image: mcr.microsoft.com/dotnet/sdk:9.0-alpine   # run inside Alpine SDK
      options: --env DOTNET_RUNTIME_ID=linux-musl-x64  # force musl RID

    steps:
    - uses: actions/checkout@v4
    
    - name: Show environment info
      run: |
        uname -a
        cat /etc/os-release
        dotnet --info

    - name: Setup Saxon Libraries
      shell: pwsh
      run: |
        $downloadUrl = "https://downloads.saxonica.com/SaxonC/EE/12/SaxonCEE-linux-x86_64-12-8-0.zip"
        $targetDir = "SaxonHECSharp/runtimes"
        $nativeDir = Join-Path $targetDir "linux-musl-x64/native"
        $tempDir = "saxon-temp"
        
        # Create directories
        New-Item -ItemType Directory -Force -Path $nativeDir | Out-Null
        New-Item -ItemType Directory -Force -Path $tempDir | Out-Null
        
        Write-Host "Downloading Saxon from $downloadUrl"
        $zipPath = "saxon-temp.zip"
        Invoke-WebRequest -Uri $downloadUrl -OutFile $zipPath
        Expand-Archive -Path $zipPath -DestinationPath $tempDir -Force
        Remove-Item $zipPath
        
        Write-Host "Looking for Saxon libraries in extracted contents..."
        $binDirs = Get-ChildItem -Path $tempDir -Recurse -Directory | Where-Object { $_.Name -eq "bin" }
        foreach ($binDir in $binDirs) {
            Get-ChildItem -Path $binDir.FullName -Recurse -File | Copy-Item -Destination $nativeDir -Force
        }
        $libDirs = Get-ChildItem -Path $tempDir -Recurse -Directory | Where-Object { $_.Name -eq "lib" }
        foreach ($libDir in $libDirs) {
            Get-ChildItem -Path $libDir.FullName -Recurse -File | Copy-Item -Destination $nativeDir -Force
        }
        
        Get-ChildItem -Path $nativeDir -File | ForEach-Object { chmod +x $_.FullName }
        Remove-Item -Path $tempDir -Recurse -Force
        
        $libFiles = Get-ChildItem $nativeDir
        if ($libFiles.Count -eq 0) {
            Write-Error "No library files were found and copied"
            exit 1
        }

    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Solution
      run: dotnet build SaxonHECSharp.sln --configuration Release --runtime linux-musl-x64

    - name: Build Example Project
      shell: pwsh
      run: |
        $nativeLibPath = "SaxonHECSharp.Example/bin/Release/net9.0/linux-musl-x64/native"
        if (-Not (Test-Path -Path $nativeLibPath)) {
            Write-Error "Native library directory not found: ${nativeLibPath}"
            exit 1
        }

        $Env:LD_LIBRARY_PATH = $nativeLibPath
        Write-Host "Set LD_LIBRARY_PATH to: $Env:LD_LIBRARY_PATH"
        
        dotnet run --project SaxonHECSharp.Example/SaxonHECSharp.Example.csproj --configuration Release --runtime linux-musl-x64
